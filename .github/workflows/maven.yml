name: Appium Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      ANDROID_EMULATOR_WAIT_TIME_BEFORE_KILL: 60  # Increased wait time for emulator shutdown
      EMULATOR_TIMEOUT: 600  # Increased timeout for emulator setup and boot time (10 mins)

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Appium
        run: npm install -g appium

      - name: Start Appium Server
        run: appium --log appium.log &

      - name: Install Android SDK and Command-line Tools
        run: |
          # Install Android SDK command-line tools
          mkdir -p $HOME/Android/Sdk/cmdline-tools
          cd $HOME/Android/Sdk
          wget https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip -O commandlinetools.zip
          unzip commandlinetools.zip -d cmdline-tools
          rm commandlinetools.zip
          mv $HOME/Android/Sdk/cmdline-tools/cmdline-tools $HOME/Android/Sdk/cmdline-tools/latest
          yes | $HOME/Android/Sdk/cmdline-tools/latest/bin/sdkmanager --sdk_root=$HOME/Android/Sdk --update
          yes | $HOME/Android/Sdk/cmdline-tools/latest/bin/sdkmanager --sdk_root=$HOME/Android/Sdk "system-images;android-30;google_apis;x86_64"
          yes | $HOME/Android/Sdk/cmdline-tools/latest/bin/sdkmanager --licenses

      - name: List available devices
        run: $HOME/Android/Sdk/cmdline-tools/latest/bin/avdmanager list device

      - name: Set up Android Emulator
        run: |
          echo "Creating AVD..."
          # Create a basic AVD with the available system image
          $HOME/Android/Sdk/cmdline-tools/latest/bin/avdmanager create avd --force -n test-emulator --abi google_apis/x86_64 --package "system-images;android-30;google_apis;x86_64" --device "Nexus_5X" || echo "Failed to create AVD with Nexus_5X, please check available devices"

      - name: Start Android Emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          target: google_apis
          arch: x86_64
          profile: Nexus 5X  # Updated to Nexus_5X
          avd-name: test-emulator
          disable-animations: true
          headless: true  # Run emulator in headless mode to avoid UI issues
          script: |
            echo "Starting emulator..."
            echo "Waiting for the emulator to boot..."
            adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done;'
            echo "Emulator is ready."

      - name: Wait for emulator to start
        run: adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done;'

      - name: Verify emulator is running
        run: adb devices

      - name: Install Maven dependencies
        run: mvn clean install

      - name: Run Appium tests
        run: mvn test

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: target/surefire-reports/

      - name: Clean up Android Emulator
        run: |
          echo "Shutting down emulator..."
          adb -s emulator-5554 emu kill || echo "Graceful shutdown failed"
          adb -s emulator-5554 emu kill || adb -s emulator-5554 shell reboot -p || adb -s emulator-5554 emu kill
